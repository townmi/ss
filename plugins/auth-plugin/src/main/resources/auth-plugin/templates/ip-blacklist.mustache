<div class="page-header">
    <h1>
        <span>🔐</span>
        <span>{{title}}</span>
    </h1>
    <div class="breadcrumb">
        <a href="/auth/">认证管理</a> / IP黑名单管理
    </div>
</div>

<div class="controls">
    <div class="controls-header">
        <h2>黑名单管理</h2>
        <button class="btn btn-primary" onclick="showAddModal()">添加黑名单</button>
    </div>
    <div class="form-group">
        <label>搜索IP:</label>
        <input type="text" id="searchInput" placeholder="输入IP地址搜索..." onkeyup="searchBlacklist()">
        <button class="btn btn-secondary" onclick="refreshBlacklist()">刷新</button>
    </div>
</div>

<div class="blacklist-table data-table">
    <table>
        <thead>
            <tr>
                <th>IP地址</th>
                <th>封禁原因</th>
                <th>封禁者</th>
                <th>封禁时间</th>
                <th>过期时间</th>
                <th>状态</th>
                <th>操作</th>
            </tr>
        </thead>
        <tbody id="blacklistBody">
            <tr>
                <td colspan="7" class="loading">加载中...</td>
            </tr>
        </tbody>
    </table>
</div>

<!-- 添加黑名单模态框 -->
<div id="addModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2>添加IP黑名单</h2>
        </div>
        <div class="modal-body">
            <div class="form-field">
                <label>IP地址 *</label>
                <input type="text" id="ipAddress" placeholder="例如: 192.168.1.100">
            </div>
            <div class="form-field">
                <label>封禁原因 *</label>
                <textarea id="reason" placeholder="请输入封禁原因..."></textarea>
            </div>
            <div class="form-field">
                <label>过期时间</label>
                <input type="datetime-local" id="expiresAt">
            </div>
            <div class="form-field checkbox-field">
                <input type="checkbox" id="isPermanent" onchange="toggleExpiration()">
                <label for="isPermanent">永久封禁</label>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn btn-secondary" onclick="hideAddModal()">取消</button>
            <button class="btn btn-primary" onclick="addBlacklist()">添加</button>
        </div>
    </div>
</div>

<script>
    let blacklistData = [];

    // 页面加载时获取黑名单列表
    window.onload = function() {
        loadBlacklist();
    };

    function loadBlacklist() {
        fetch('/auth/admin/security/blacklist')
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    blacklistData = data.data.blacklist || [];
                    renderBlacklist(blacklistData);
                }
            })
            .catch(error => {
                console.error('Error loading blacklist:', error);
                document.getElementById('blacklistBody').innerHTML = 
                    '<tr><td colspan="7" class="empty-state">加载失败，请重试</td></tr>';
            });
    }

    function renderBlacklist(data) {
        const tbody = document.getElementById('blacklistBody');
        
        if (data.length === 0) {
            tbody.innerHTML = `
                <tr>
                    <td colspan="7" class="empty-state">
                        <div class="icon">🚫</div>
                        <p>暂无黑名单记录</p>
                    </td>
                </tr>
            `;
            return;
        }

        tbody.innerHTML = data.map(item => {
            const isExpired = item.expiresAt && new Date(item.expiresAt) < new Date();
            const statusClass = isExpired ? 'status-expired' : 'status-active';
            const statusText = item.isPermanent ? '永久封禁' : (isExpired ? '已过期' : '生效中');
            
            return `
                <tr>
                    <td><strong>${item.ipAddress}</strong></td>
                    <td>${item.reason}</td>
                    <td>${item.blockedBy || 'System'}</td>
                    <td>${formatDate(item.createdAt)}</td>
                    <td>${item.isPermanent ? '永不过期' : (item.expiresAt ? formatDate(item.expiresAt) : '-')}</td>
                    <td><span class="status-badge ${statusClass}">${statusText}</span></td>
                    <td>
                        <button class="btn btn-danger" onclick="removeBlacklist('${item.ipAddress}')">移除</button>
                    </td>
                </tr>
            `;
        }).join('');
    }

    function searchBlacklist() {
        const searchTerm = document.getElementById('searchInput').value.toLowerCase();
        const filtered = blacklistData.filter(item => 
            item.ipAddress.toLowerCase().includes(searchTerm) ||
            item.reason.toLowerCase().includes(searchTerm)
        );
        renderBlacklist(filtered);
    }

    function refreshBlacklist() {
        loadBlacklist();
    }

    function showAddModal() {
        document.getElementById('addModal').style.display = 'block';
        // 设置默认过期时间为24小时后
        const tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);
        document.getElementById('expiresAt').value = tomorrow.toISOString().slice(0, 16);
    }

    function hideAddModal() {
        document.getElementById('addModal').style.display = 'none';
        // 清空表单
        document.getElementById('ipAddress').value = '';
        document.getElementById('reason').value = '';
        document.getElementById('isPermanent').checked = false;
        toggleExpiration();
    }

    function toggleExpiration() {
        const isPermanent = document.getElementById('isPermanent').checked;
        document.getElementById('expiresAt').disabled = isPermanent;
    }

    function addBlacklist() {
        const ipAddress = document.getElementById('ipAddress').value.trim();
        const reason = document.getElementById('reason').value.trim();
        const isPermanent = document.getElementById('isPermanent').checked;
        const expiresAt = isPermanent ? null : document.getElementById('expiresAt').value;

        if (!ipAddress || !reason) {
            alert('请填写IP地址和封禁原因');
            return;
        }

        const data = {
            ipAddress: ipAddress,
            reason: reason,
            isPermanent: isPermanent
        };

        if (!isPermanent && expiresAt) {
            data.expiresAt = new Date(expiresAt).toISOString();
        }

        fetch('/auth/admin/security/blacklist-ip', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + localStorage.getItem('authToken')
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                hideAddModal();
                loadBlacklist();
            } else {
                alert('添加失败: ' + data.error);
            }
        })
        .catch(error => {
            alert('添加失败: ' + error.message);
        });
    }

    function removeBlacklist(ipAddress) {
        if (!confirm(`确定要从黑名单中移除 ${ipAddress} 吗？`)) {
            return;
        }

        fetch('/auth/admin/security/unblacklist-ip', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + localStorage.getItem('authToken')
            },
            body: JSON.stringify({ ipAddress: ipAddress })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                loadBlacklist();
            } else {
                alert('移除失败: ' + data.error);
            }
        })
        .catch(error => {
            alert('移除失败: ' + error.message);
        });
    }

    function formatDate(dateString) {
        if (!dateString) return '-';
        const date = new Date(dateString);
        return date.toLocaleString('zh-CN');
    }

    // 点击模态框外部关闭
    window.onclick = function(event) {
        if (event.target.className === 'modal') {
            event.target.style.display = 'none';
        }
    }
</script> 