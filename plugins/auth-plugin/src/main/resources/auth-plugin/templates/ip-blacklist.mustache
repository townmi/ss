<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}} - Auth Plugin</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background-color: #f5f5f5;
            color: #333;
            line-height: 1.6;
        }

        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem 0;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .header-content {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header h1 {
            font-size: 2rem;
            font-weight: 600;
        }

        .nav-links {
            display: flex;
            gap: 1.5rem;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .nav-links a:hover {
            background-color: rgba(255,255,255,0.1);
        }

        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 2rem;
        }

        .controls {
            background: white;
            padding: 1.5rem;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 2rem;
        }

        .controls-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-block;
        }

        .btn-primary {
            background-color: #667eea;
            color: white;
        }

        .btn-primary:hover {
            background-color: #5a67d8;
        }

        .btn-danger {
            background-color: #e53e3e;
            color: white;
        }

        .btn-danger:hover {
            background-color: #c53030;
        }

        .btn-secondary {
            background-color: #718096;
            color: white;
        }

        .btn-secondary:hover {
            background-color: #4a5568;
        }

        .form-group {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
        }

        .form-group label {
            font-weight: 500;
            color: #4a5568;
        }

        .form-group input,
        .form-group select {
            padding: 0.5rem;
            border: 1px solid #e2e8f0;
            border-radius: 5px;
            font-size: 0.9rem;
        }

        .form-group input[type="text"] {
            flex: 1;
            min-width: 200px;
        }

        .blacklist-table {
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th {
            background-color: #f7fafc;
            padding: 1rem;
            text-align: left;
            font-weight: 600;
            color: #4a5568;
            border-bottom: 2px solid #e2e8f0;
        }

        td {
            padding: 1rem;
            border-bottom: 1px solid #e2e8f0;
        }

        tr:hover {
            background-color: #f7fafc;
        }

        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .status-active {
            background-color: #f56565;
            color: white;
        }

        .status-expired {
            background-color: #a0aec0;
            color: white;
        }

        .loading {
            text-align: center;
            padding: 2rem;
            color: #718096;
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
            color: #718096;
        }

        .empty-state svg {
            width: 64px;
            height: 64px;
            margin: 0 auto 1rem;
            opacity: 0.3;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            z-index: 1000;
        }

        .modal-content {
            background: white;
            margin: 10% auto;
            padding: 2rem;
            width: 90%;
            max-width: 500px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .modal-header {
            margin-bottom: 1.5rem;
        }

        .modal-header h2 {
            color: #2d3748;
        }

        .modal-body {
            margin-bottom: 1.5rem;
        }

        .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
        }

        .form-field {
            margin-bottom: 1rem;
        }

        .form-field label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #4a5568;
        }

        .form-field input,
        .form-field select,
        .form-field textarea {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #e2e8f0;
            border-radius: 5px;
            font-size: 0.9rem;
        }

        .form-field textarea {
            resize: vertical;
            min-height: 80px;
        }

        .checkbox-field {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .checkbox-field input[type="checkbox"] {
            width: auto;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="header-content">
            <h1>üîê {{title}}</h1>
            <div class="nav-links">
                <a href="/auth/">‰ª™Ë°®Êùø</a>
                <a href="/auth/admin/security/stats/page">ÂÆâÂÖ®ÁªüËÆ°</a>
                <a href="/auth/admin/security/locked-accounts/page">ÈîÅÂÆöË¥¶Êà∑</a>
                <a href="/auth/logs/page">ÁôªÂΩïÊó•Âøó</a>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="controls">
            <div class="controls-header">
                <h2>ÈªëÂêçÂçïÁÆ°ÁêÜ</h2>
                <button class="btn btn-primary" onclick="showAddModal()">Ê∑ªÂä†ÈªëÂêçÂçï</button>
            </div>
            <div class="form-group">
                <label>ÊêúÁ¥¢IP:</label>
                <input type="text" id="searchInput" placeholder="ËæìÂÖ•IPÂú∞ÂùÄÊêúÁ¥¢..." onkeyup="searchBlacklist()">
                <button class="btn btn-secondary" onclick="refreshBlacklist()">Âà∑Êñ∞</button>
            </div>
        </div>

        <div class="blacklist-table">
            <table>
                <thead>
                    <tr>
                        <th>IPÂú∞ÂùÄ</th>
                        <th>Â∞ÅÁ¶ÅÂéüÂõ†</th>
                        <th>Â∞ÅÁ¶ÅËÄÖ</th>
                        <th>Â∞ÅÁ¶ÅÊó∂Èó¥</th>
                        <th>ËøáÊúüÊó∂Èó¥</th>
                        <th>Áä∂ÊÄÅ</th>
                        <th>Êìç‰Ωú</th>
                    </tr>
                </thead>
                <tbody id="blacklistBody">
                    <tr>
                        <td colspan="7" class="loading">Âä†ËΩΩ‰∏≠...</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Ê∑ªÂä†ÈªëÂêçÂçïÊ®°ÊÄÅÊ°Ü -->
    <div id="addModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Ê∑ªÂä†IPÈªëÂêçÂçï</h2>
            </div>
            <div class="modal-body">
                <div class="form-field">
                    <label>IPÂú∞ÂùÄ *</label>
                    <input type="text" id="ipAddress" placeholder="‰æãÂ¶Ç: 192.168.1.100">
                </div>
                <div class="form-field">
                    <label>Â∞ÅÁ¶ÅÂéüÂõ† *</label>
                    <textarea id="reason" placeholder="ËØ∑ËæìÂÖ•Â∞ÅÁ¶ÅÂéüÂõ†..."></textarea>
                </div>
                <div class="form-field">
                    <label>ËøáÊúüÊó∂Èó¥</label>
                    <input type="datetime-local" id="expiresAt">
                </div>
                <div class="form-field checkbox-field">
                    <input type="checkbox" id="isPermanent" onchange="toggleExpiration()">
                    <label for="isPermanent">Ê∞∏‰πÖÂ∞ÅÁ¶Å</label>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" onclick="hideAddModal()">ÂèñÊ∂à</button>
                <button class="btn btn-primary" onclick="addBlacklist()">Ê∑ªÂä†</button>
            </div>
        </div>
    </div>

    <script>
        let blacklistData = [];

        // È°µÈù¢Âä†ËΩΩÊó∂Ëé∑ÂèñÈªëÂêçÂçïÂàóË°®
        window.onload = function() {
            loadBlacklist();
        };

        function loadBlacklist() {
            fetch('/auth/admin/security/blacklist')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        blacklistData = data.data.blacklist || [];
                        renderBlacklist(blacklistData);
                    }
                })
                .catch(error => {
                    console.error('Error loading blacklist:', error);
                    document.getElementById('blacklistBody').innerHTML = 
                        '<tr><td colspan="7" class="empty-state">Âä†ËΩΩÂ§±Ë¥•ÔºåËØ∑ÈáçËØï</td></tr>';
                });
        }

        function renderBlacklist(data) {
            const tbody = document.getElementById('blacklistBody');
            
            if (data.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="7" class="empty-state">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636" />
                            </svg>
                            <p>ÊöÇÊó†ÈªëÂêçÂçïËÆ∞ÂΩï</p>
                        </td>
                    </tr>
                `;
                return;
            }

            tbody.innerHTML = data.map(item => {
                const isExpired = item.expiresAt && new Date(item.expiresAt) < new Date();
                const statusClass = isExpired ? 'status-expired' : 'status-active';
                const statusText = item.isPermanent ? 'Ê∞∏‰πÖÂ∞ÅÁ¶Å' : (isExpired ? 'Â∑≤ËøáÊúü' : 'ÁîüÊïà‰∏≠');
                
                return `
                    <tr>
                        <td><strong>${item.ipAddress}</strong></td>
                        <td>${item.reason}</td>
                        <td>${item.blockedBy || 'System'}</td>
                        <td>${formatDate(item.createdAt)}</td>
                        <td>${item.isPermanent ? 'Ê∞∏‰∏çËøáÊúü' : (item.expiresAt ? formatDate(item.expiresAt) : '-')}</td>
                        <td><span class="status-badge ${statusClass}">${statusText}</span></td>
                        <td>
                            <button class="btn btn-danger" onclick="removeBlacklist('${item.ipAddress}')">ÁßªÈô§</button>
                        </td>
                    </tr>
                `;
            }).join('');
        }

        function searchBlacklist() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const filtered = blacklistData.filter(item => 
                item.ipAddress.toLowerCase().includes(searchTerm) ||
                item.reason.toLowerCase().includes(searchTerm)
            );
            renderBlacklist(filtered);
        }

        function refreshBlacklist() {
            loadBlacklist();
        }

        function showAddModal() {
            document.getElementById('addModal').style.display = 'block';
            // ËÆæÁΩÆÈªòËÆ§ËøáÊúüÊó∂Èó¥‰∏∫24Â∞èÊó∂Âêé
            const tomorrow = new Date();
            tomorrow.setDate(tomorrow.getDate() + 1);
            document.getElementById('expiresAt').value = tomorrow.toISOString().slice(0, 16);
        }

        function hideAddModal() {
            document.getElementById('addModal').style.display = 'none';
            // Ê∏ÖÁ©∫Ë°®Âçï
            document.getElementById('ipAddress').value = '';
            document.getElementById('reason').value = '';
            document.getElementById('isPermanent').checked = false;
            toggleExpiration();
        }

        function toggleExpiration() {
            const isPermanent = document.getElementById('isPermanent').checked;
            document.getElementById('expiresAt').disabled = isPermanent;
        }

        function addBlacklist() {
            const ipAddress = document.getElementById('ipAddress').value.trim();
            const reason = document.getElementById('reason').value.trim();
            const isPermanent = document.getElementById('isPermanent').checked;
            const expiresAt = isPermanent ? null : document.getElementById('expiresAt').value;

            if (!ipAddress || !reason) {
                alert('ËØ∑Â°´ÂÜôIPÂú∞ÂùÄÂíåÂ∞ÅÁ¶ÅÂéüÂõ†');
                return;
            }

            const data = {
                ipAddress: ipAddress,
                reason: reason,
                isPermanent: isPermanent
            };

            if (!isPermanent && expiresAt) {
                data.expiresAt = new Date(expiresAt).toISOString();
            }

            fetch('/auth/admin/security/blacklist-ip', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + localStorage.getItem('authToken')
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    hideAddModal();
                    loadBlacklist();
                } else {
                    alert('Ê∑ªÂä†Â§±Ë¥•: ' + data.error);
                }
            })
            .catch(error => {
                alert('Ê∑ªÂä†Â§±Ë¥•: ' + error.message);
            });
        }

        function removeBlacklist(ipAddress) {
            if (!confirm(`Á°ÆÂÆöË¶Å‰ªéÈªëÂêçÂçï‰∏≠ÁßªÈô§ ${ipAddress} ÂêóÔºü`)) {
                return;
            }

            fetch('/auth/admin/security/unblacklist-ip', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + localStorage.getItem('authToken')
                },
                body: JSON.stringify({ ipAddress: ipAddress })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    loadBlacklist();
                } else {
                    alert('ÁßªÈô§Â§±Ë¥•: ' + data.error);
                }
            })
            .catch(error => {
                alert('ÁßªÈô§Â§±Ë¥•: ' + error.message);
            });
        }

        function formatDate(dateString) {
            if (!dateString) return '-';
            const date = new Date(dateString);
            return date.toLocaleString('zh-CN');
        }

        // ÁÇπÂáªÊ®°ÊÄÅÊ°ÜÂ§ñÈÉ®ÂÖ≥Èó≠
        window.onclick = function(event) {
            if (event.target.className === 'modal') {
                event.target.style.display = 'none';
            }
        }
    </script>
</body>
</html> 