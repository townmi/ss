<div class="auth-page-container">
  <div class="register-container">
    <div class="register-header">
      <h1>🚀 创建账户</h1>
      <p>加入 Work Anyway，开启高效工作之旅</p>
    </div>
    
    <form id="registerForm" class="register-form">
      <div class="step-indicator">
        <div class="step active" data-step="1">
          <span class="step-number">1</span>
          <span class="step-label">基本信息</span>
        </div>
        <div class="step" data-step="2">
          <span class="step-number">2</span>
          <span class="step-label">安全设置</span>
        </div>
        <div class="step" data-step="3">
          <span class="step-number">3</span>
          <span class="step-label">完成注册</span>
        </div>
      </div>
      
      <!-- Step 1: 基本信息 -->
      <div class="form-step active" id="step1">
        <div class="form-group">
          <label for="username">用户名</label>
          <input 
            type="text" 
            id="username" 
            name="username" 
            placeholder="请输入用户名"
            required
            pattern="[a-zA-Z0-9_-]{3,20}"
            title="用户名只能包含字母、数字、下划线和横线，长度3-20位"
          >
          <div class="field-hint">用户名将作为您的唯一标识</div>
        </div>
        
        <div class="form-group">
          <label for="email">邮箱地址</label>
          <input 
            type="email" 
            id="email" 
            name="email" 
            placeholder="请输入邮箱地址"
            required
          >
          <div class="field-hint">我们将向此邮箱发送验证邮件</div>
        </div>
        
        <div class="form-group">
          <label for="phone">手机号码（可选）</label>
          <input 
            type="tel" 
            id="phone" 
            name="phone" 
            placeholder="请输入手机号码"
            pattern="[0-9]{11}"
          >
        </div>
        
        <button type="button" class="submit-btn" onclick="nextStep()">
          下一步
        </button>
      </div>
      
      <!-- Step 2: 安全设置 -->
      <div class="form-step" id="step2">
        <div class="form-group">
          <label for="password">设置密码</label>
          <input 
            type="password" 
            id="password" 
            name="password" 
            placeholder="请输入密码"
            required
            minlength="8"
          >
          <div class="password-strength">
            <div class="strength-bar">
              <div class="strength-level" id="strengthLevel"></div>
            </div>
            <span class="strength-text" id="strengthText">密码强度</span>
          </div>
        </div>
        
        <div class="form-group">
          <label for="confirmPassword">确认密码</label>
          <input 
            type="password" 
            id="confirmPassword" 
            name="confirmPassword" 
            placeholder="请再次输入密码"
            required
          >
        </div>
        
        <div class="password-requirements">
          <h4>密码要求：</h4>
          <ul>
            <li id="req-length">至少8个字符</li>
            <li id="req-upper">包含大写字母</li>
            <li id="req-lower">包含小写字母</li>
            <li id="req-number">包含数字</li>
          </ul>
        </div>
        
        <div class="form-actions">
          <button type="button" class="btn-secondary" onclick="prevStep()">
            上一步
          </button>
          <button type="button" class="submit-btn" onclick="nextStep()">
            下一步
          </button>
        </div>
      </div>
      
      <!-- Step 3: 完成注册 -->
      <div class="form-step" id="step3">
        <div class="form-group">
          <label for="verificationCode">邮箱验证码</label>
          <div class="verification-group">
            <input 
              type="text" 
              id="verificationCode" 
              name="verificationCode" 
              placeholder="请输入6位验证码"
              maxlength="6"
              pattern="[0-9]{6}"
              required
            >
            <button type="button" class="btn-send-code" id="sendCodeBtn" onclick="sendVerificationCode()">
              发送验证码
            </button>
          </div>
        </div>
        
        <div class="terms-group">
          <label>
            <input type="checkbox" id="agreeTerms" name="agreeTerms" required>
            我已阅读并同意 <a href="/terms" target="_blank">服务条款</a> 和 <a href="/privacy" target="_blank">隐私政策</a>
          </label>
        </div>
        
        <div id="errorMessage" class="error-message" style="display: none;"></div>
        <div id="successMessage" class="success-message" style="display: none;"></div>
        
        <div class="form-actions">
          <button type="button" class="btn-secondary" onclick="prevStep()">
            上一步
          </button>
          <button type="submit" class="submit-btn" id="submitBtn">
            <span class="btn-text">完成注册</span>
            <span class="btn-loading" style="display: none;">
              <span class="spinner"></span>
              注册中...
            </span>
          </button>
        </div>
      </div>
      
      <div class="login-link">
        已有账户？<a href="/auth/login">立即登录</a>
      </div>
    </form>
  </div>
</div>

<script>
let currentStep = 1;
let verificationTimer = null;

function nextStep() {
  if (validateStep(currentStep)) {
    document.querySelector(`#step${currentStep}`).classList.remove('active');
    document.querySelector(`[data-step="${currentStep}"]`).classList.remove('active');
    currentStep++;
    document.querySelector(`#step${currentStep}`).classList.add('active');
    document.querySelector(`[data-step="${currentStep}"]`).classList.add('active');
    document.querySelector(`[data-step="${currentStep}"]`).classList.add('completed');
  }
}

function prevStep() {
  document.querySelector(`#step${currentStep}`).classList.remove('active');
  document.querySelector(`[data-step="${currentStep}"]`).classList.remove('active');
  currentStep--;
  document.querySelector(`#step${currentStep}`).classList.add('active');
  document.querySelector(`[data-step="${currentStep}"]`).classList.add('active');
}

function validateStep(step) {
  switch(step) {
    case 1:
      const username = document.getElementById('username').value;
      const email = document.getElementById('email').value;
      
      if (!username || username.length < 3) {
        showFieldError('username', '用户名至少3个字符');
        return false;
      }
      
      if (!email || !isValidEmail(email)) {
        showFieldError('email', '请输入有效的邮箱地址');
        return false;
      }
      
      return true;
      
    case 2:
      const password = document.getElementById('password').value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      
      if (!password || password.length < 8) {
        showFieldError('password', '密码至少8个字符');
        return false;
      }
      
      if (password !== confirmPassword) {
        showFieldError('confirmPassword', '两次输入的密码不一致');
        return false;
      }
      
      return true;
      
    default:
      return true;
  }
}

function isValidEmail(email) {
  return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
}

function showFieldError(fieldId, message) {
  const field = document.getElementById(fieldId);
  field.classList.add('error');
  // 可以添加错误提示逻辑
}

// 密码强度检测
document.getElementById('password').addEventListener('input', function(e) {
  const password = e.target.value;
  const strength = calculatePasswordStrength(password);
  updatePasswordStrength(strength);
  updatePasswordRequirements(password);
});

function calculatePasswordStrength(password) {
  let strength = 0;
  if (password.length >= 8) strength++;
  if (password.length >= 12) strength++;
  if (/[a-z]/.test(password)) strength++;
  if (/[A-Z]/.test(password)) strength++;
  if (/[0-9]/.test(password)) strength++;
  if (/[^a-zA-Z0-9]/.test(password)) strength++;
  return strength;
}

function updatePasswordStrength(strength) {
  const strengthLevel = document.getElementById('strengthLevel');
  const strengthText = document.getElementById('strengthText');
  const strengthPercentage = (strength / 6) * 100;
  
  strengthLevel.style.width = strengthPercentage + '%';
  
  if (strength <= 2) {
    strengthLevel.style.backgroundColor = '#ef4444';
    strengthText.textContent = '弱';
  } else if (strength <= 4) {
    strengthLevel.style.backgroundColor = '#f59e0b';
    strengthText.textContent = '中';
  } else {
    strengthLevel.style.backgroundColor = '#10b981';
    strengthText.textContent = '强';
  }
}

function updatePasswordRequirements(password) {
  document.getElementById('req-length').className = password.length >= 8 ? 'met' : '';
  document.getElementById('req-upper').className = /[A-Z]/.test(password) ? 'met' : '';
  document.getElementById('req-lower').className = /[a-z]/.test(password) ? 'met' : '';
  document.getElementById('req-number').className = /[0-9]/.test(password) ? 'met' : '';
}

// 发送验证码
function sendVerificationCode() {
  const email = document.getElementById('email').value;
  const sendCodeBtn = document.getElementById('sendCodeBtn');
  
  if (!email) {
    alert('请先填写邮箱地址');
    return;
  }
  
  sendCodeBtn.disabled = true;
  let countdown = 60;
  
  // 发送验证码请求
  fetch('/auth/send-verification-code', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ email: email, type: 'register' })
  }).then(response => response.json())
    .then(result => {
      if (result.success) {
        // 开始倒计时
        verificationTimer = setInterval(() => {
          countdown--;
          sendCodeBtn.textContent = `${countdown}秒后重试`;
          
          if (countdown <= 0) {
            clearInterval(verificationTimer);
            sendCodeBtn.disabled = false;
            sendCodeBtn.textContent = '发送验证码';
          }
        }, 1000);
      } else {
        sendCodeBtn.disabled = false;
        alert(result.error || '发送失败，请重试');
      }
    })
    .catch(error => {
      sendCodeBtn.disabled = false;
      alert('网络错误，请稍后重试');
    });
}

// 表单提交
document.getElementById('registerForm').addEventListener('submit', async function(e) {
  e.preventDefault();
  
  if (!document.getElementById('agreeTerms').checked) {
    alert('请同意服务条款和隐私政策');
    return;
  }
  
  const submitBtn = document.getElementById('submitBtn');
  const btnText = submitBtn.querySelector('.btn-text');
  const btnLoading = submitBtn.querySelector('.btn-loading');
  const errorMessage = document.getElementById('errorMessage');
  const successMessage = document.getElementById('successMessage');
  
  // 显示加载状态
  submitBtn.disabled = true;
  btnText.style.display = 'none';
  btnLoading.style.display = 'inline-flex';
  errorMessage.style.display = 'none';
  successMessage.style.display = 'none';
  
  const formData = {
    username: document.getElementById('username').value,
    email: document.getElementById('email').value,
    phone: document.getElementById('phone').value,
    password: document.getElementById('password').value,
    verificationCode: document.getElementById('verificationCode').value
  };
  
  try {
    const response = await fetch('/auth/register', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(formData)
    });
    
    const result = await response.json();
    
    if (result.success) {
      successMessage.textContent = '注册成功！正在跳转到登录页面...';
      successMessage.style.display = 'block';
      
      setTimeout(() => {
        window.location.href = '/auth/login';
      }, 2000);
    } else {
      errorMessage.textContent = result.error || '注册失败，请重试';
      errorMessage.style.display = 'block';
    }
  } catch (error) {
    errorMessage.textContent = '网络错误，请稍后重试';
    errorMessage.style.display = 'block';
  } finally {
    submitBtn.disabled = false;
    btnText.style.display = 'inline';
    btnLoading.style.display = 'none';
  }
});
</script> 