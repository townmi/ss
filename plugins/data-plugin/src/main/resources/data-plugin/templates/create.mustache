<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>创建数据 - {{collection}}</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f5f5f5;
    }
    
    .breadcrumb {
      background-color: #fff;
      padding: 12px 20px;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
    }

    .breadcrumb-inner {
      max-width: 800px;
      margin: 0 auto;
    }

    .breadcrumb ul {
      list-style: none;
      display: flex;
      align-items: center;
      flex-wrap: wrap;
      margin: 0;
      padding: 0;
    }

    .breadcrumb li {
      display: flex;
      align-items: center;
    }

    .breadcrumb li:not(:last-child)::after {
      content: '/';
      margin: 0 10px;
      color: #999;
    }

    .breadcrumb a {
      color: #007bff;
      text-decoration: none;
      transition: color 0.2s;
    }

    .breadcrumb a:hover {
      color: #0056b3;
      text-decoration: underline;
    }

    .breadcrumb .current {
      color: #666;
      font-weight: 500;
    }
    
    .container {
      max-width: 800px;
      margin: 0 auto;
      background: white;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    h1 {
      color: #333;
      margin-bottom: 30px;
    }
    .form-group {
      margin-bottom: 20px;
    }
    label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
      color: #555;
    }
    textarea {
      width: 100%;
      min-height: 300px;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-family: 'Courier New', monospace;
      font-size: 14px;
      resize: vertical;
    }
    .buttons {
      margin-top: 20px;
      display: flex;
      gap: 10px;
    }
    button {
      background: #2196F3;
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
    }
    button:hover {
      background: #1976D2;
    }
    .btn-cancel {
      background: #666;
    }
    .btn-cancel:hover {
      background: #555;
    }
    .help {
      background: #e3f2fd;
      padding: 15px;
      border-radius: 4px;
      margin-bottom: 20px;
      font-size: 14px;
    }
    .error {
      color: #f44336;
      margin-top: 5px;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <nav class="breadcrumb">
    <div class="breadcrumb-inner">
      <ul>
        <li><a href="/page/">首页</a></li>
        <li><a href="/page/data/">数据管理</a></li>
        <li><a href="/page/data/collection/{{collection}}">{{collection}}</a></li>
        <li class="current">创建新数据</li>
      </ul>
    </div>
  </nav>
  
  <div class="container">
    <h1>创建新数据 - {{collection}}</h1>
    
    <div class="help">
      <strong>提示：</strong>请输入有效的 JSON 格式数据。系统会自动生成 ID 和时间戳字段。
    </div>
    
    <form id="createForm">
      <div class="form-group">
        <label for="jsonData">数据内容 (JSON 格式)：</label>
        <textarea id="jsonData" name="jsonData" placeholder='{
  "name": "示例名称",
  "description": "示例描述",
  "price": 99.99,
  "active": true
}'></textarea>
        <div id="error" class="error"></div>
      </div>
      
      <div class="buttons">
        <button type="submit">创建</button>
        <button type="button" class="btn-cancel" onclick="window.location.href='/page/data/collection/{{collection}}'">取消</button>
      </div>
    </form>
  </div>
  
  <script>
    document.getElementById('createForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const jsonData = document.getElementById('jsonData').value;
      const errorDiv = document.getElementById('error');
      
      // 清除之前的错误
      errorDiv.textContent = '';
      
      try {
        // 验证 JSON 格式
        const data = JSON.parse(jsonData);
        
        // 发送请求
        fetch('/api/data/{{collection}}', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(result => {
          if (result.success) {
            alert('创建成功！');
            window.location.href = '/page/data/collection/{{collection}}';
          } else {
            errorDiv.textContent = '创建失败: ' + (result.error || '未知错误');
          }
        })
        .catch(error => {
          errorDiv.textContent = '请求失败: ' + error.message;
        });
        
      } catch (e) {
        errorDiv.textContent = 'JSON 格式错误: ' + e.message;
      }
    });
    
    // 自动格式化 JSON
    document.getElementById('jsonData').addEventListener('blur', function() {
      try {
        const data = JSON.parse(this.value);
        this.value = JSON.stringify(data, null, 2);
        document.getElementById('error').textContent = '';
      } catch (e) {
        // 忽略格式错误
      }
    });
  </script>
</body>
</html> 